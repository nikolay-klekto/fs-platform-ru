
name: Deploy front

on:
  push:
    branches:
      - main
      - dev-front-react
  pull_request:
    branches:
      - main
      - dev-front-react

jobs:
  build:
    if: |
      contains(github.event.head_commit.message, '[deploy-front]') ||
      contains(github.event.pull_request.title, '[deploy-front]')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: List files in build directory
      run: ls -R frontend-react

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-app-front
        path: frontend-react

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: my-app-front
        path: ./artifact
        
    - name: Verify artifact downloaded
      run: ls -l ./artifact

    - name: Copy files via SCP
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        scp -r -o StrictHostKeyChecking=no ./artifact/* root@${{ secrets.IP_DOMAIN }}:${{ secrets.DESTINATION_FOLDER_FRONTEND }}

    - name: Restart Docker Container
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        ssh -o StrictHostKeyChecking=no root@${{ secrets.IP_DOMAIN }} << 'EOF'
          cd /home/Nikolay/funScrut/funscrut-frontend
          docker stop react-app || true
          docker rm react-app || true
          docker rmi react-app || true
          docker build -t react-app .
          docker run -d --name react-app -p 80:80 react-app
        EOF
