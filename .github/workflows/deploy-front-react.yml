name: Build and Deploy React App

on:
  push:
    branches:
      - dev-front-react
  pull_request:
    branches:
      - dev-front-react

jobs:
  build:
    if: |
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[deploy-front]')) ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.title, '[deploy-front]'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: frontend-react

      - name: Build React app
        run: npm run build
        working-directory: frontend-react

      - name: Show build folder contents
        run: ls -la
        working-directory: frontend-react/build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: frontend-react/build

  deploy:
    if: needs.build.result == 'success'
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: ./build

      - name: Copy build to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no -r ./build root@${{ secrets.IP_DOMAIN }}:/home/Nikolay/funScrut/frontend-react/build

      - name: Restart Docker (frontend only)
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.IP_DOMAIN }} << 'EOF'
          cd /home/Nikolay/funScrut
          docker compose up -d --build react-app
          EOF
