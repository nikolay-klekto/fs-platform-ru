name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    if: |
      contains(github.event.head_commit.message, '[deploy-back]') ||
      contains(github.event.pull_request.title, '[deploy-back]')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  

    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'  # Укажите версию JDK.
        distribution: 'corretto'
        cache: gradle
      
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      # with:
      #   gradle-version: 7.4.2
        
    - name: Build with Gradle
      run: ./gradlew bootJar --console=plain

    # - name: Test JAR
    #   run: |
    #     java -jar backend/domain/ru-client/build/libs/ru-client-0.0.2-SNAPSHOT.jar &
    #     sleep 30
    #     curl -I http://localhost:8183/actuator/health || true

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app-jar
        path: backend/domain/ru-client/build/libs/ru-client-0.0.2-SNAPSHOT.jar  # Путь к сгенерированному JAR файлу

    - name: Upload JAR auth artifact
      uses: actions/upload-artifact@v4
      with:
<<<<<<< HEAD
        name: docker-compose-file
        path: docker-compose.yml  # Путь к файлу Docker Compose      
=======
        name: my-app-jar-auth
        path: backend/gateway/registration/authorization/build/libs/ru-auth-0.0.3-SNAPSHOT.jar  # Путь к сгенерированному JAR файлу

    - name: Upload JAR auth artifact
      uses: actions/upload-artifact@v4
      with:
        name: my-app-jar-call-request
        path: backend/call-requests-api/build/libs/ru-call-requests-0.0.3-SNAPSHOT.jar  # Путь к сгенерированному JAR файлу
>>>>>>> origin/main
        
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download JAR artifact
      uses: actions/download-artifact@v4
      with:
        name: my-app-jar
        path: ./artifact

    - name: Download JAR registration artifact
      uses: actions/download-artifact@v4
      with:
        name: my-app-jar-auth
        path: ./artifact

<<<<<<< HEAD
=======
    - name: Download JAR call request artifact
      uses: actions/download-artifact@v4
      with:
        name: my-app-jar-call-request
        path: ./artifact

>>>>>>> origin/main
    - name: Copy files via SCP
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        scp -o StrictHostKeyChecking=no ./artifact/ru-client-0.0.2-SNAPSHOT.jar root@${{ secrets.IP_DOMAIN }}:${{ secrets.DESTINATION_BACKEND_JAR_FOLDER }}
<<<<<<< HEAD
        scp -o StrictHostKeyChecking=no ./artifact/docker-compose.yml root@${{ secrets.IP_DOMAIN }}:${{ secrets.DESTINATION_BASE_FOLDER }}
=======
        scp -o StrictHostKeyChecking=no ./artifact/ru-auth-0.0.3-SNAPSHOT.jar root@${{ secrets.IP_DOMAIN }}:${{ secrets.DESTINATION_BACKEND_JAR_FOLDER }}
        scp -o StrictHostKeyChecking=no ./artifact/ru-call-requests-0.0.3-SNAPSHOT.jar root@${{ secrets.IP_DOMAIN }}:${{ secrets.DESTINATION_BACKEND_JAR_FOLDER }}
>>>>>>> origin/main
        
    - name: Restart Docker Compose
      env:
       SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
       ssh -o StrictHostKeyChecking=no root@${{ secrets.IP_DOMAIN }} << 'EOF'
       cd /home/Nikolay/funScrut
       docker compose up -d --build
       EOF
