/*
 * This file is generated by jOOQ.
 */
package com.fs.auth.jooq.keys


import com.fs.auth.jooq.tables.Basket
import com.fs.auth.jooq.tables.Client
import com.fs.auth.jooq.tables.ClientsRefreshTokens
import com.fs.auth.jooq.tables.CompanyProfession
import com.fs.auth.jooq.tables.Order
import com.fs.auth.jooq.tables.records.BasketRecord
import com.fs.auth.jooq.tables.records.ClientRecord
import com.fs.auth.jooq.tables.records.ClientsRefreshTokensRecord
import com.fs.auth.jooq.tables.records.CompanyProfessionRecord
import com.fs.auth.jooq.tables.records.OrderRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val BASKET_PKEY: UniqueKey<BasketRecord> = Internal.createUniqueKey(Basket.BASKET, DSL.name("basket_pkey"), arrayOf(Basket.BASKET.ID), true)
val CLIENT_PKEY: UniqueKey<ClientRecord> = Internal.createUniqueKey(Client.CLIENT, DSL.name("client_pkey"), arrayOf(Client.CLIENT.ID), true)
val CLIENTS_REFRESH_TOKENS_PKEY: UniqueKey<ClientsRefreshTokensRecord> = Internal.createUniqueKey(ClientsRefreshTokens.CLIENTS_REFRESH_TOKENS, DSL.name("clients_refresh_tokens_pkey"), arrayOf(ClientsRefreshTokens.CLIENTS_REFRESH_TOKENS.ID), true)
val COMPANY_PROFESSION_PKEY: UniqueKey<CompanyProfessionRecord> = Internal.createUniqueKey(CompanyProfession.COMPANY_PROFESSION, DSL.name("company_profession_pkey"), arrayOf(CompanyProfession.COMPANY_PROFESSION.ID), true)
val ORDER_PKEY: UniqueKey<OrderRecord> = Internal.createUniqueKey(Order.ORDER, DSL.name("order_pkey"), arrayOf(Order.ORDER.ID), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val CLIENT__CLIENT_BASKET_ID_FKEY: ForeignKey<ClientRecord, BasketRecord> = Internal.createForeignKey(Client.CLIENT, DSL.name("client_basket_id_fkey"), arrayOf(Client.CLIENT.BASKET_ID), com.fs.auth.jooq.keys.BASKET_PKEY, arrayOf(Basket.BASKET.ID), true)
val CLIENTS_REFRESH_TOKENS__CLIENTS_REFRESH_TOKENS_CLIENT_ID_FKEY: ForeignKey<ClientsRefreshTokensRecord, ClientRecord> = Internal.createForeignKey(ClientsRefreshTokens.CLIENTS_REFRESH_TOKENS, DSL.name("clients_refresh_tokens_client_id_fkey"), arrayOf(ClientsRefreshTokens.CLIENTS_REFRESH_TOKENS.CLIENT_ID), com.fs.auth.jooq.keys.CLIENT_PKEY, arrayOf(Client.CLIENT.ID), true)
val ORDER__ORDER_BASKET_ID_FKEY: ForeignKey<OrderRecord, BasketRecord> = Internal.createForeignKey(Order.ORDER, DSL.name("order_basket_id_fkey"), arrayOf(Order.ORDER.BASKET_ID), com.fs.auth.jooq.keys.BASKET_PKEY, arrayOf(Basket.BASKET.ID), true)
val ORDER__ORDER_COMPANY_PROFESSION_ID_FKEY: ForeignKey<OrderRecord, CompanyProfessionRecord> = Internal.createForeignKey(Order.ORDER, DSL.name("order_company_profession_id_fkey"), arrayOf(Order.ORDER.COMPANY_PROFESSION_ID), com.fs.auth.jooq.keys.COMPANY_PROFESSION_PKEY, arrayOf(CompanyProfession.COMPANY_PROFESSION.ID), true)
