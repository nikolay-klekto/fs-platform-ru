server:
  port: 8183
  error:
    include-stacktrace: never

graphql:
  datetime:
    scalars:
      local-date-time:
        format: yyyy-MM-DD'T'HH:mm
      local-date:
        format: yyyy-MM-DD

spring:
  datasource:
#    For docker
    url: jdbc:postgresql://45.135.234.61:15432/fun_scrut
    username: username
    password: password
#    url: jdbc:postgresql://localhost:5432/FunScrut2
#    username: postgres
#    password: 191220#destin
    schema: public
    driverClassName: org.postgresql.Driver
  graphql:
    enable: true
    path: /graphql
    cors:
      allowed-origins: "*"
      printer:
        enabled: true
  application:
    name: ru-service
  cloud:
    consul:
      host: 192.168.99.100
      port: 8500
      discovery:
        register: false
  jooq:
#    url: jdbc:postresql://45.135.234.61:15432/fun_scrut
#    user: username
#    password: password
##    url: jdbc:postgresql:FunScrut2
##    user: postgres
##    password: 191220#destin
#    schema: public
#    driver: org.postgresql.Driver
    sql-dialect: POSTGRES
#  liquibase:
#    enabled: false
#    drop-first: false
#    change-log: classpath:db/changelog/db.changelog-master.xml
#    default-schema: public
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration
  devtools:
    add-properties: false
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  web:
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
  mail:
    host: smtp.gmail.com
    port: 587
    username: funscrut@gmail.com
    password: fyriezkydylqtupr
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

logging:
  level:
    org:
      jooq:
        tools:
          LoggerListener: debug
      springframework.core.env: DEBUG

jooq:
  url: jdbc:postgresql://45.135.234.61:15432/fun_scrut
  user: username
  password: password
#  url: jdbc:postgresql:FunScrut2
#  user: postgres
#  password: 191220#destin
  schema: public
  driver: org.postgresql.Driver

management:
  graphql:
    metrics:
      enabled: false
  endpoints:
    web:
      exposure:
        include: 'prometheus, health, info, metrics'
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

jwt:
  secret: N]Aw&)Cya(JAg!o_JU^/+\:H5@4tTxQ@RQA,~yEjg9*y&Ra7yqA.IdmtV^oZ,=;L39235

#management:
#  endpoints:
#    web.exposure.include: "*"
#    metrics.enabled: true
#    prometheus.enabled: true

