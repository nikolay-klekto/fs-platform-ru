/*
 * This file is generated by jOOQ.
 */
package com.fs.domain.jooq.tables.records


import com.fs.domain.jooq.tables.Constants

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record13
import org.jooq.Row13
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ConstantsRecord() : UpdatableRecordImpl<ConstantsRecord>(Constants.CONSTANTS), Record13<Long?, Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var daysForPayOrder: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    open var phoneNumber: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var clientEmail: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var partnerEmail: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var candidateEmail: String?
        set(value): Unit = set(5, value)
        get(): String? = get(5) as String?

    open var officeCity: String?
        set(value): Unit = set(6, value)
        get(): String? = get(6) as String?

    open var officeAddress: String?
        set(value): Unit = set(7, value)
        get(): String? = get(7) as String?

    open var instLink: String?
        set(value): Unit = set(8, value)
        get(): String? = get(8) as String?

    open var tgLink: String?
        set(value): Unit = set(9, value)
        get(): String? = get(9) as String?

    open var linkedinLink: String?
        set(value): Unit = set(10, value)
        get(): String? = get(10) as String?

    open var footerOfficialInfo: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var footerAdditionalInfo: String?
        set(value): Unit = set(12, value)
        get(): String? = get(12) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row13<Long?, Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?> = super.fieldsRow() as Row13<Long?, Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?>
    override fun valuesRow(): Row13<Long?, Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?> = super.valuesRow() as Row13<Long?, Int?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?, String?>
    override fun field1(): Field<Long?> = Constants.CONSTANTS.ID
    override fun field2(): Field<Int?> = Constants.CONSTANTS.DAYS_FOR_PAY_ORDER
    override fun field3(): Field<String?> = Constants.CONSTANTS.PHONE_NUMBER
    override fun field4(): Field<String?> = Constants.CONSTANTS.CLIENT_EMAIL
    override fun field5(): Field<String?> = Constants.CONSTANTS.PARTNER_EMAIL
    override fun field6(): Field<String?> = Constants.CONSTANTS.CANDIDATE_EMAIL
    override fun field7(): Field<String?> = Constants.CONSTANTS.OFFICE_CITY
    override fun field8(): Field<String?> = Constants.CONSTANTS.OFFICE_ADDRESS
    override fun field9(): Field<String?> = Constants.CONSTANTS.INST_LINK
    override fun field10(): Field<String?> = Constants.CONSTANTS.TG_LINK
    override fun field11(): Field<String?> = Constants.CONSTANTS.LINKEDIN_LINK
    override fun field12(): Field<String?> = Constants.CONSTANTS.FOOTER_OFFICIAL_INFO
    override fun field13(): Field<String?> = Constants.CONSTANTS.FOOTER_ADDITIONAL_INFO
    override fun component1(): Long? = id
    override fun component2(): Int? = daysForPayOrder
    override fun component3(): String? = phoneNumber
    override fun component4(): String? = clientEmail
    override fun component5(): String? = partnerEmail
    override fun component6(): String? = candidateEmail
    override fun component7(): String? = officeCity
    override fun component8(): String? = officeAddress
    override fun component9(): String? = instLink
    override fun component10(): String? = tgLink
    override fun component11(): String? = linkedinLink
    override fun component12(): String? = footerOfficialInfo
    override fun component13(): String? = footerAdditionalInfo
    override fun value1(): Long? = id
    override fun value2(): Int? = daysForPayOrder
    override fun value3(): String? = phoneNumber
    override fun value4(): String? = clientEmail
    override fun value5(): String? = partnerEmail
    override fun value6(): String? = candidateEmail
    override fun value7(): String? = officeCity
    override fun value8(): String? = officeAddress
    override fun value9(): String? = instLink
    override fun value10(): String? = tgLink
    override fun value11(): String? = linkedinLink
    override fun value12(): String? = footerOfficialInfo
    override fun value13(): String? = footerAdditionalInfo

    override fun value1(value: Long?): ConstantsRecord {
        this.id = value
        return this
    }

    override fun value2(value: Int?): ConstantsRecord {
        this.daysForPayOrder = value
        return this
    }

    override fun value3(value: String?): ConstantsRecord {
        this.phoneNumber = value
        return this
    }

    override fun value4(value: String?): ConstantsRecord {
        this.clientEmail = value
        return this
    }

    override fun value5(value: String?): ConstantsRecord {
        this.partnerEmail = value
        return this
    }

    override fun value6(value: String?): ConstantsRecord {
        this.candidateEmail = value
        return this
    }

    override fun value7(value: String?): ConstantsRecord {
        this.officeCity = value
        return this
    }

    override fun value8(value: String?): ConstantsRecord {
        this.officeAddress = value
        return this
    }

    override fun value9(value: String?): ConstantsRecord {
        this.instLink = value
        return this
    }

    override fun value10(value: String?): ConstantsRecord {
        this.tgLink = value
        return this
    }

    override fun value11(value: String?): ConstantsRecord {
        this.linkedinLink = value
        return this
    }

    override fun value12(value: String?): ConstantsRecord {
        this.footerOfficialInfo = value
        return this
    }

    override fun value13(value: String?): ConstantsRecord {
        this.footerAdditionalInfo = value
        return this
    }

    override fun values(value1: Long?, value2: Int?, value3: String?, value4: String?, value5: String?, value6: String?, value7: String?, value8: String?, value9: String?, value10: String?, value11: String?, value12: String?, value13: String?): ConstantsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        this.value7(value7)
        this.value8(value8)
        this.value9(value9)
        this.value10(value10)
        this.value11(value11)
        this.value12(value12)
        this.value13(value13)
        return this
    }

    /**
     * Create a detached, initialised ConstantsRecord
     */
    constructor(id: Long? = null, daysForPayOrder: Int? = null, phoneNumber: String? = null, clientEmail: String? = null, partnerEmail: String? = null, candidateEmail: String? = null, officeCity: String? = null, officeAddress: String? = null, instLink: String? = null, tgLink: String? = null, linkedinLink: String? = null, footerOfficialInfo: String? = null, footerAdditionalInfo: String? = null): this() {
        this.id = id
        this.daysForPayOrder = daysForPayOrder
        this.phoneNumber = phoneNumber
        this.clientEmail = clientEmail
        this.partnerEmail = partnerEmail
        this.candidateEmail = candidateEmail
        this.officeCity = officeCity
        this.officeAddress = officeAddress
        this.instLink = instLink
        this.tgLink = tgLink
        this.linkedinLink = linkedinLink
        this.footerOfficialInfo = footerOfficialInfo
        this.footerAdditionalInfo = footerAdditionalInfo
    }

    /**
     * Create a detached, initialised ConstantsRecord
     */
    constructor(value: com.fs.domain.jooq.tables.pojos.Constants?): this() {
        if (value != null) {
            this.id = value.id
            this.daysForPayOrder = value.daysForPayOrder
            this.phoneNumber = value.phoneNumber
            this.clientEmail = value.clientEmail
            this.partnerEmail = value.partnerEmail
            this.candidateEmail = value.candidateEmail
            this.officeCity = value.officeCity
            this.officeAddress = value.officeAddress
            this.instLink = value.instLink
            this.tgLink = value.tgLink
            this.linkedinLink = value.linkedinLink
            this.footerOfficialInfo = value.footerOfficialInfo
            this.footerAdditionalInfo = value.footerAdditionalInfo
        }
    }
}
