/*
 * This file is generated by jOOQ.
 */
package com.fs.domain.jooq.tables.records


import com.fs.domain.jooq.tables.JobRequests

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class JobRequestsRecord() : UpdatableRecordImpl<JobRequestsRecord>(JobRequests.JOB_REQUESTS), Record5<Long?, String?, String?, String?, LocalDate?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var username: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var phoneNumber: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var profession: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var dateCreated: LocalDate?
        set(value): Unit = set(4, value)
        get(): LocalDate? = get(4) as LocalDate?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Long?, String?, String?, String?, LocalDate?> = super.fieldsRow() as Row5<Long?, String?, String?, String?, LocalDate?>
    override fun valuesRow(): Row5<Long?, String?, String?, String?, LocalDate?> = super.valuesRow() as Row5<Long?, String?, String?, String?, LocalDate?>
    override fun field1(): Field<Long?> = JobRequests.JOB_REQUESTS.ID
    override fun field2(): Field<String?> = JobRequests.JOB_REQUESTS.USERNAME
    override fun field3(): Field<String?> = JobRequests.JOB_REQUESTS.PHONE_NUMBER
    override fun field4(): Field<String?> = JobRequests.JOB_REQUESTS.PROFESSION
    override fun field5(): Field<LocalDate?> = JobRequests.JOB_REQUESTS.DATE_CREATED
    override fun component1(): Long? = id
    override fun component2(): String? = username
    override fun component3(): String? = phoneNumber
    override fun component4(): String? = profession
    override fun component5(): LocalDate? = dateCreated
    override fun value1(): Long? = id
    override fun value2(): String? = username
    override fun value3(): String? = phoneNumber
    override fun value4(): String? = profession
    override fun value5(): LocalDate? = dateCreated

    override fun value1(value: Long?): JobRequestsRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): JobRequestsRecord {
        this.username = value
        return this
    }

    override fun value3(value: String?): JobRequestsRecord {
        this.phoneNumber = value
        return this
    }

    override fun value4(value: String?): JobRequestsRecord {
        this.profession = value
        return this
    }

    override fun value5(value: LocalDate?): JobRequestsRecord {
        this.dateCreated = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: String?, value4: String?, value5: LocalDate?): JobRequestsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised JobRequestsRecord
     */
    constructor(id: Long? = null, username: String? = null, phoneNumber: String? = null, profession: String? = null, dateCreated: LocalDate? = null): this() {
        this.id = id
        this.username = username
        this.phoneNumber = phoneNumber
        this.profession = profession
        this.dateCreated = dateCreated
    }

    /**
     * Create a detached, initialised JobRequestsRecord
     */
    constructor(value: com.fs.domain.jooq.tables.pojos.JobRequests?): this() {
        if (value != null) {
            this.id = value.id
            this.username = value.username
            this.phoneNumber = value.phoneNumber
            this.profession = value.profession
            this.dateCreated = value.dateCreated
        }
    }
}
