/*
 * This file is generated by jOOQ.
 */
package com.fs.domain.jooq.tables.records


import com.fs.domain.jooq.tables.ProfessionsCompaniesFeedback

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ProfessionsCompaniesFeedbackRecord() : UpdatableRecordImpl<ProfessionsCompaniesFeedbackRecord>(ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK), Record6<Long?, Long?, Long?, String?, String?, LocalDate?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var companyId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var professionId: Long?
        set(value): Unit = set(2, value)
        get(): Long? = get(2) as Long?

    open var question: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var answer: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var dateCreated: LocalDate?
        set(value): Unit = set(5, value)
        get(): LocalDate? = get(5) as LocalDate?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row6<Long?, Long?, Long?, String?, String?, LocalDate?> = super.fieldsRow() as Row6<Long?, Long?, Long?, String?, String?, LocalDate?>
    override fun valuesRow(): Row6<Long?, Long?, Long?, String?, String?, LocalDate?> = super.valuesRow() as Row6<Long?, Long?, Long?, String?, String?, LocalDate?>
    override fun field1(): Field<Long?> = ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK.ID
    override fun field2(): Field<Long?> = ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK.COMPANY_ID
    override fun field3(): Field<Long?> = ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK.PROFESSION_ID
    override fun field4(): Field<String?> = ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK.QUESTION
    override fun field5(): Field<String?> = ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK.ANSWER
    override fun field6(): Field<LocalDate?> = ProfessionsCompaniesFeedback.PROFESSIONS_COMPANIES_FEEDBACK.DATE_CREATED
    override fun component1(): Long? = id
    override fun component2(): Long? = companyId
    override fun component3(): Long? = professionId
    override fun component4(): String? = question
    override fun component5(): String? = answer
    override fun component6(): LocalDate? = dateCreated
    override fun value1(): Long? = id
    override fun value2(): Long? = companyId
    override fun value3(): Long? = professionId
    override fun value4(): String? = question
    override fun value5(): String? = answer
    override fun value6(): LocalDate? = dateCreated

    override fun value1(value: Long?): ProfessionsCompaniesFeedbackRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): ProfessionsCompaniesFeedbackRecord {
        this.companyId = value
        return this
    }

    override fun value3(value: Long?): ProfessionsCompaniesFeedbackRecord {
        this.professionId = value
        return this
    }

    override fun value4(value: String?): ProfessionsCompaniesFeedbackRecord {
        this.question = value
        return this
    }

    override fun value5(value: String?): ProfessionsCompaniesFeedbackRecord {
        this.answer = value
        return this
    }

    override fun value6(value: LocalDate?): ProfessionsCompaniesFeedbackRecord {
        this.dateCreated = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: Long?, value4: String?, value5: String?, value6: LocalDate?): ProfessionsCompaniesFeedbackRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised ProfessionsCompaniesFeedbackRecord
     */
    constructor(id: Long? = null, companyId: Long? = null, professionId: Long? = null, question: String? = null, answer: String? = null, dateCreated: LocalDate? = null): this() {
        this.id = id
        this.companyId = companyId
        this.professionId = professionId
        this.question = question
        this.answer = answer
        this.dateCreated = dateCreated
    }

    /**
     * Create a detached, initialised ProfessionsCompaniesFeedbackRecord
     */
    constructor(value: com.fs.domain.jooq.tables.pojos.ProfessionsCompaniesFeedback?): this() {
        if (value != null) {
            this.id = value.id
            this.companyId = value.companyId
            this.professionId = value.professionId
            this.question = value.question
            this.answer = value.answer
            this.dateCreated = value.dateCreated
        }
    }
}
