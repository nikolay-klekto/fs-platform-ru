/*
 * This file is generated by jOOQ.
 */
package com.fs.domain.jooq.tables.records


import com.fs.domain.jooq.tables.OrderDates

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OrderDatesRecord() : UpdatableRecordImpl<OrderDatesRecord>(OrderDates.ORDER_DATES), Record5<Long?, Long?, String?, Int?, LocalDate?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var companyProfessionId: Long?
        set(value): Unit = set(1, value)
        get(): Long? = get(1) as Long?

    open var dates: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var freePlaces: Int?
        set(value): Unit = set(3, value)
        get(): Int? = get(3) as Int?

    open var dateCreated: LocalDate?
        set(value): Unit = set(4, value)
        get(): LocalDate? = get(4) as LocalDate?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Long?, Long?, String?, Int?, LocalDate?> = super.fieldsRow() as Row5<Long?, Long?, String?, Int?, LocalDate?>
    override fun valuesRow(): Row5<Long?, Long?, String?, Int?, LocalDate?> = super.valuesRow() as Row5<Long?, Long?, String?, Int?, LocalDate?>
    override fun field1(): Field<Long?> = OrderDates.ORDER_DATES.ID
    override fun field2(): Field<Long?> = OrderDates.ORDER_DATES.COMPANY_PROFESSION_ID
    override fun field3(): Field<String?> = OrderDates.ORDER_DATES.DATES
    override fun field4(): Field<Int?> = OrderDates.ORDER_DATES.FREE_PLACES
    override fun field5(): Field<LocalDate?> = OrderDates.ORDER_DATES.DATE_CREATED
    override fun component1(): Long? = id
    override fun component2(): Long? = companyProfessionId
    override fun component3(): String? = dates
    override fun component4(): Int? = freePlaces
    override fun component5(): LocalDate? = dateCreated
    override fun value1(): Long? = id
    override fun value2(): Long? = companyProfessionId
    override fun value3(): String? = dates
    override fun value4(): Int? = freePlaces
    override fun value5(): LocalDate? = dateCreated

    override fun value1(value: Long?): OrderDatesRecord {
        this.id = value
        return this
    }

    override fun value2(value: Long?): OrderDatesRecord {
        this.companyProfessionId = value
        return this
    }

    override fun value3(value: String?): OrderDatesRecord {
        this.dates = value
        return this
    }

    override fun value4(value: Int?): OrderDatesRecord {
        this.freePlaces = value
        return this
    }

    override fun value5(value: LocalDate?): OrderDatesRecord {
        this.dateCreated = value
        return this
    }

    override fun values(value1: Long?, value2: Long?, value3: String?, value4: Int?, value5: LocalDate?): OrderDatesRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised OrderDatesRecord
     */
    constructor(id: Long? = null, companyProfessionId: Long? = null, dates: String? = null, freePlaces: Int? = null, dateCreated: LocalDate? = null): this() {
        this.id = id
        this.companyProfessionId = companyProfessionId
        this.dates = dates
        this.freePlaces = freePlaces
        this.dateCreated = dateCreated
    }

    /**
     * Create a detached, initialised OrderDatesRecord
     */
    constructor(value: com.fs.domain.jooq.tables.pojos.OrderDates?): this() {
        if (value != null) {
            this.id = value.id
            this.companyProfessionId = value.companyProfessionId
            this.dates = value.dates
            this.freePlaces = value.freePlaces
            this.dateCreated = value.dateCreated
        }
    }
}
